# -*- coding: utf-8 -*-
"""BIGDATA-07-2021_Tarea1_ESV.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ORi-sTf65zCfuSt6j1jtRnv4ZDeFpIe2

# Big Data, Programa de Ciencia de los Datos
## Tarea #1

* Esteban Sáenz Villalobos (**esaenz7@gmail.com**)
* Entrega: 08 de agosto 2021, 22:00.
* Observaciones: Trabajo elaborado desde Google Colab. Ejecutar cada celda de código de forma secuencial.

---
"""

import sys, os
from datetime import datetime
from pyspark.sql import SparkSession
from pyspark.sql import functions as F
from pyspark.sql.window import Window
from pyspark.sql.types import (DateType, IntegerType, FloatType, StringType, StructField, StructType, TimestampType)

spark = SparkSession.builder\
        .master("local")\
        .appName("Tarea#1")\
        .config('spark.ui.port', '4050')\
        .getOrCreate()

spark.sparkContext.setLogLevel("ERROR")
files = sys.argv

dfCiclista = spark.read.csv(files[1], schema=StructType(\
                               [StructField('cedula', IntegerType()),
                                StructField('nombre', StringType()),
                                StructField('provincia', StringType()),]))
print('dfCiclista')
dfCiclista.show()
dfCiclista.printSchema()
dfRuta = spark.read.csv(files[2], schema=StructType(\
                               [StructField('codigo_ruta', IntegerType()),
                                StructField('nombre_ruta', StringType()),
                                StructField('kms', FloatType()),]))
print('dfRuta')
dfRuta.show()
dfRuta.printSchema()
dfActividad = spark.read.csv(files[3], schema=StructType(\
                               [StructField('codigo_ruta', IntegerType()),
                                StructField('cedula', IntegerType()),
                                StructField('fecha', DateType()),]))
print('dfActividad')
dfActividad.show()
dfActividad.printSchema()

top = 5
colcount1 = dfCiclista.select(F.countDistinct('provincia')).collect()[0][0]

dfResultados1 = dfActividad.join(dfRuta, dfActividad.codigo_ruta == dfRuta.codigo_ruta)\
.join(dfCiclista, dfActividad.cedula == dfCiclista.cedula)
dfResultados1.show()

dfResultados2 = dfResultados1.select('fecha','nombre','provincia','nombre_ruta','kms')
dfResultados2.show()

dfResultados3 = dfResultados2.groupBy('provincia','nombre').agg(F.sum('kms'),F.mean('kms'))\
.withColumn('sum(kms)', F.round('sum(kms)',2))\
.withColumn('avg(kms)', F.round('avg(kms)',2))
dfResultados3.show()

w_provincia = Window.partitionBy('provincia').orderBy(F.col('sum(kms)').desc())
dfResultadosTop = dfResultados3.withColumn('row',F.row_number().over(w_provincia))\
.filter(F.col('row')<=top).drop('row')\
.orderBy('provincia')
dfResultadosTop.show(top*colcount1)

